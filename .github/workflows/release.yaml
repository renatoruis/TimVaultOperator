name: Release

on:
  push:
    tags:
      - 'v*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: timvaultoperator

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest
      
      - name: Set image tag for manifest
        id: image
        run: |
          # Extract version without 'v' prefix
          VERSION="${{ github.ref_name }}"
          VERSION="${VERSION#v}"
          echo "tag=ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${VERSION}" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Create release artifacts
        run: |
          mkdir -p release
          
          # Copy CRDs
          cp config/crd/timsecret-crd.yaml release/
          cp config/crd/timsecretconfig-crd.yaml release/
          
          # Create install manifest with proper order
          cat > release/install.yaml <<EOF
          # TimVault Operator Installation
          # Version: ${{ github.ref_name }}
          # 
          # Installation order (critical for success):
          # 1. CRDs (must be first)
          # 2. Namespace (must exist before ServiceAccount)
          # 3. ClusterRole (namespace-independent)
          # 4. ServiceAccount (depends on namespace)
          # 5. ClusterRoleBinding (depends on ServiceAccount)
          # 6. Deployment (depends on ServiceAccount)
          
          ---
          $(cat config/crd/timsecret-crd.yaml)
          ---
          $(cat config/crd/timsecretconfig-crd.yaml)
          ---
          $(cat config/manager/namespace.yaml)
          ---
          $(cat config/rbac/role.yaml)
          ---
          $(cat config/rbac/service_account.yaml)
          ---
          $(cat config/rbac/role_binding.yaml)
          ---
          $(cat config/manager/deployment.yaml | sed "s|image: timvault-operator:latest|image: ${{ steps.image.outputs.tag }}|g")
          EOF
          
          # Create examples bundle
          tar -czf release/examples.tar.gz examples/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            release/install.yaml
            release/timsecret-crd.yaml
            release/timsecretconfig-crd.yaml
            release/examples.tar.gz
          generate_release_notes: true
          body: |
            ## Installation

            ### Quick Install
            ```bash
            kubectl apply -f https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/install.yaml
            ```

            ### Manual Install
            ```bash
            # Install CRDs
            kubectl apply -f https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/timsecret-crd.yaml
            kubectl apply -f https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/timsecretconfig-crd.yaml
            ```

            ### Docker Image
            ```
            ${{ steps.image.outputs.tag }}
            ```

            ## What's Changed
            See the release notes below for details.

